"""
Django settings for rurusetto project.

Generated by 'django-admin startproject' using Django 3.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
from django.core.management.utils import get_random_secret_key
from decouple import config, Csv
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = get_random_secret_key()
SECRET_KEY = config('SECRET_KEY', default="an_awesome_secret_key_here")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=True, cast=bool)
TEST_SERVER = config('TEST_SERVER', default=True, cast=bool)

ALLOWED_HOSTS = config('ALLOWED_HOSTS', cast=Csv(), default='')

# Application definition

INSTALLED_APPS = [
    'users.apps.UsersConfig',
    'wiki.apps.WikiConfig',
    'crispy_forms',
    'mdeditor',
    'colorfield',
    'admin_interface',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.sitemaps',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.osu',
    'rest_framework',
    'storages'
]

SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'rurusetto.urls'

X_FRAME_OPTIONS = 'SAMEORIGIN'

SILENCED_SYSTEM_CHECKS = ['security.W019']

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.request',
            ],
        },
    },
]

WSGI_APPLICATION = 'rurusetto.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

if config('DATABASE_DEVELOPMENT', default=True, cast=bool):
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': f"django.db.backends.{config('DATABASE_TYPE', default='postgresql')}",
            'NAME': config('DATABASE_NAME', default='peppy-and-his-wangfiles'),
            'USER': config('DATABASE_USER', default='peppy'),
            'PASSWORD': config('DATABASE_PASSWORD', default='wang'),
            'HOST': config('DATABASE_HOST', default='localhost'),
            'PORT': config('DATABASE_PORT', default=''),
        }
    }

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

if config('STATIC_LOCAL', default=True, cast=bool):
    STATIC_ROOT = os.path.join(BASE_DIR, 'static/')
    STATIC_URL = '/static/'

    MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
    MEDIA_URL = '/media/'
else:
    AWS_ACCESS_KEY_ID = config('AWS_ACCESS_KEY_ID', default="your-spaces-access-key")
    AWS_SECRET_ACCESS_KEY = config('AWS_SECRET_ACCESS_KEY', default="your-spaces-secret-access-key")
    AWS_STORAGE_BUCKET_NAME = config('AWS_STORAGE_BUCKET_NAME', default="your-storage-bucket-name")
    AWS_S3_ENDPOINT_URL = config('AWS_S3_ENDPOINT_URL', default="your-endpoint-url")
    AWS_S3_CUSTOM_DOMAIN = config('AWS_S3_CUSTOM_DOMAIN', default="your_custom_domain_url")
    AWS_S3_OBJECT_PARAMETERS = {
        'CacheControl': 'max-age=86400',
    }
    AWS_LOCATION = config('AWS_LOCATION', default="your-spaces-files-folder")

    STATICFILES_STORAGE = 'custom_storages.StaticStorage'
    DEFAULT_FILE_STORAGE = 'custom_storages.MediaStorage'

    if AWS_S3_CUSTOM_DOMAIN == "":
        STATIC_URL = '{}/{}/'.format(AWS_S3_CUSTOM_DOMAIN, 'static')
        STATIC_ROOT = 'static/'

        MEDIA_URL = '{}/{}/'.format(AWS_S3_CUSTOM_DOMAIN, 'media')
        MEDIA_ROOT = 'media/'
    else:
        STATIC_URL = '{}/{}/'.format(AWS_S3_ENDPOINT_URL, 'static')
        STATIC_ROOT = 'static/'

        MEDIA_URL = '{}/{}/'.format(AWS_S3_ENDPOINT_URL, 'media')
        MEDIA_ROOT = 'media/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_REDIRECT_URL = 'home'
LOGIN_URL = 'account_login'

ACCOUNT_EMAIL_VERIFICATION = 'none'

# More enum configuration on website

MAX_PROFILE_PICTURE_SIZE = 5242880

# Django crispy forms settings

CRISPY_TEMPLATE_PACK = 'bootstrap4'

# API key and API configuration

OSU_OAUTH_CLIENT_ID = config('OSU_OAUTH_CLIENT_ID', default="")
OSU_OAUTH_CLIENT_SECRET = config('OSU_OAUTH_CLIENT_SECRET', default="")
OSU_API_V1_KEY = config('OSU_API_V1_KEY', default="")
GITHUB_TOKEN = config('GITHUB_TOKEN', default="")
GA_TRACKING_ID = config('GA_TRACKING_ID', default="")

# Markdown Editor Configuration

MDEDITOR_CONFIGS = {
    'default': {
        'width': '100% ',  # Custom edit box width
        'height': 500,  # Custom edit box height
        'toolbar': ["undo", "redo", "|",
                    "bold", "del", "italic", "quote", "ucwords", "uppercase", "lowercase", "|",
                    "h1", "h2", "h3", "h4", "h5", "h6", "|",
                    "list-ul", "list-ol", "hr", "|",
                    "link", "reference-link", "image", "code", "preformatted-text", "code-block", "table", "datetime",
                    "html-entities", "pagebreak", "goto-line", "|",
                    "help",
                    "||", "preview", "watch"],  # custom edit box toolbar
        'upload_image_formats': ["jpg", "jpeg", "gif", "png", "bmp", "webp", "svg"],  # image upload format type
        'image_folder': 'wiki_images',  # image save the folder name
        'theme': 'dark',  # edit box theme, dark / default
        'preview_theme': 'default',  # Preview area theme, dark / default
        'editor_theme': 'pastel-on-dark',  # edit area theme, pastel-on-dark / default
        'toolbar_autofixed': True,  # Whether the toolbar capitals
        'search_replace': True,  # Whether to open the search for replacement
        'emoji': True,  # whether to open the expression function
        'tex': True,  # whether to open the tex chart function
        'flow_chart': True,  # whether to open the flow chart function
        'sequence': True,  # Whether to open the sequence diagram function
        'watch': True,  # Live preview
        'lineWrapping': False,  # lineWrapping
        'lineNumbers': False,  # lineNumbers
        'language': 'en'  # zh / en / es
    }
}

SOCIALACCOUNT_PROVIDERS = {
    'osu': {
        'SCOPE': [
            'identify'
        ],
        'APP': {
            'client_id': OSU_OAUTH_CLIENT_ID,
            'secret': OSU_OAUTH_CLIENT_SECRET,
        }
    }
}

USE_X_FORWARDED_HOST = True

REST_FRAMEWORK = {
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle'
    ],
    'DEFAULT_THROTTLE_RATES': {
        'anon': '500/minute',
        'user': '500/minute'
    }
}
